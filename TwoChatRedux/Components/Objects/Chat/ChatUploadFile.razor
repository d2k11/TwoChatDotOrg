@using System.Text
@using TwoChatRedux.API.Models

@inject ISnackbar Snackbar;

<MudBreakpointProvider>
    <MudOverlay Visible="@Visible" DarkBackground="true">
        <MudPaper Style="border: 2px solid #6200EE;">
            <div style="width: 350px; height: 50px; margin: auto">
                <MudStack Row Spacing="0">
                    <InputFile OnChange="@FileChanged" class="pr-4"></InputFile>
                    <MudSpacer></MudSpacer>
                    <MudIconButton Icon="@Icons.Material.Filled.Close" Color="Color.Primary" OnClick="@Close"></MudIconButton>
                </MudStack>
            </div>
        </MudPaper>
    </MudOverlay>
</MudBreakpointProvider>

@code {
    [Parameter] public bool Visible { get; set; } = false;
    [Parameter] public string Image { get; set; } = string.Empty;
    [Parameter] public ChatUser User { get; set; }

    private async void FileChanged(InputFileChangeEventArgs obj)
    {
        try
        {
            string type = obj.File.ContentType;
            Image = "";
            Image = await ConvertToBase64(obj.File.OpenReadStream(5000000));
            Image = "data:" + type + ";base64," + Image;
            Visible = false;
        }
        catch
        {
            Snackbar.Add("Error uploading file. Limit is 5MB", Severity.Error);
        }
    }
    
    public async Task<string> ConvertToBase64(Stream stream)
    {
        byte[] bytes;
        using (var memoryStream = new MemoryStream())
        {
            await stream.CopyToAsync(memoryStream);
            bytes = memoryStream.ToArray();
        }

        string base64 = Convert.ToBase64String(bytes);
        return base64;
    }

    public void Close()
    {
        Visible = false;
        Image = string.Empty;
    }

}